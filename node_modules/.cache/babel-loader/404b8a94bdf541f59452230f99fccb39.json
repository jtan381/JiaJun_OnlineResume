{"ast":null,"code":"var _jsxFileName = \"/home/jiajun/Desktop/react/my-app/src/react-download.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nexport default class Download extends Component {\n  downloadFile(fileName, fileContent) {\n    function fake_click(obj) {\n      let ev = document.createEvent(\"MouseEvents\");\n      ev.initMouseEvent(\"click\", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n      obj.dispatchEvent(ev);\n    }\n\n    function export_raw(name, data) {\n      let urlObject = window.URL || window.webkitURL || window;\n      let export_blob = new Blob([data]);\n\n      if ('msSaveBlob' in navigator) {\n        // Prefer msSaveBlob if available - Edge supports a[download] but\n        // ignores the filename provided, using the blob UUID instead.\n        // msSaveBlob will respect the provided filename\n        navigator.msSaveBlob(export_blob, name);\n      } else if ('download' in HTMLAnchorElement.prototype) {\n        let save_link = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\");\n        save_link.href = urlObject.createObjectURL(export_blob);\n        save_link.download = name;\n        fake_click(save_link);\n      } else {\n        throw new Error(\"Neither a[download] nor msSaveBlob is available\");\n      }\n    }\n\n    export_raw(fileName, fileContent);\n  }\n\n  render() {\n    const _this$props = this.props,\n          children = _this$props.children,\n          file = _this$props.file,\n          content = _this$props.content,\n          style = _this$props.style,\n          className = _this$props.className;\n    return React.createElement(\"div\", {\n      className: \"react-download-container\" + (className ? \" \" + className : \"\"),\n      onClick: () => this.downloadFile(file, content),\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, children);\n  }\n\n}\nDownload.propTypes = {\n  file: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/jiajun/Desktop/react/my-app/src/react-download.jsx"],"names":["React","Component","PropTypes","Download","downloadFile","fileName","fileContent","fake_click","obj","ev","document","createEvent","initMouseEvent","window","dispatchEvent","export_raw","name","data","urlObject","URL","webkitURL","export_blob","Blob","navigator","msSaveBlob","HTMLAnchorElement","prototype","save_link","createElementNS","href","createObjectURL","download","Error","render","props","children","file","content","style","className","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAM9CG,EAAAA,YAAY,CAACC,QAAD,EAAWC,WAAX,EAAwB;AAClC,aAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,UAAIC,EAAE,GAAGC,QAAQ,CAACC,WAAT,CAAqB,aAArB,CAAT;AACAF,MAAAA,EAAE,CAACG,cAAH,CACE,OADF,EAEE,IAFF,EAGE,KAHF,EAIEC,MAJF,EAKE,CALF,EAME,CANF,EAOE,CAPF,EAQE,CARF,EASE,CATF,EAUE,KAVF,EAWE,KAXF,EAYE,KAZF,EAaE,KAbF,EAcE,CAdF,EAeE,IAfF;AAiBAL,MAAAA,GAAG,CAACM,aAAJ,CAAkBL,EAAlB;AACD;;AACD,aAASM,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgC;AAC9B,UAAIC,SAAS,GAAGL,MAAM,CAACM,GAAP,IAAcN,MAAM,CAACO,SAArB,IAAkCP,MAAlD;AACA,UAAIQ,WAAW,GAAG,IAAIC,IAAJ,CAAS,CAACL,IAAD,CAAT,CAAlB;;AAEA,UAAI,gBAAgBM,SAApB,EAA+B;AAC7B;AACA;AACA;AACAA,QAAAA,SAAS,CAACC,UAAV,CAAqBH,WAArB,EAAkCL,IAAlC;AACD,OALD,MAKO,IAAI,cAAcS,iBAAiB,CAACC,SAApC,EAA+C;AACpD,YAAIC,SAAS,GAAGjB,QAAQ,CAACkB,eAAT,CACd,8BADc,EAEd,GAFc,CAAhB;AAIAD,QAAAA,SAAS,CAACE,IAAV,GAAiBX,SAAS,CAACY,eAAV,CAA0BT,WAA1B,CAAjB;AACAM,QAAAA,SAAS,CAACI,QAAV,GAAqBf,IAArB;AACAT,QAAAA,UAAU,CAACoB,SAAD,CAAV;AACD,OARM,MAQA;AACL,cAAM,IAAIK,KAAJ,CAAU,iDAAV,CAAN;AACD;AACF;;AACDjB,IAAAA,UAAU,CAACV,QAAD,EAAWC,WAAX,CAAV;AACD;;AAED2B,EAAAA,MAAM,GAAG;AAAA,wBAC+C,KAAKC,KADpD;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,IADX,eACWA,IADX;AAAA,UACiBC,OADjB,eACiBA,OADjB;AAAA,UAC0BC,KAD1B,eAC0BA,KAD1B;AAAA,UACiCC,SADjC,eACiCA,SADjC;AAGP,WACE;AACE,MAAA,SAAS,EACP,8BAA8BA,SAAS,GAAG,MAAMA,SAAT,GAAqB,EAA5D,CAFJ;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKnC,YAAL,CAAkBgC,IAAlB,EAAwBC,OAAxB,CAJjB;AAKE,MAAA,KAAK,EAAEC,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGH,QAPH,CADF;AAWD;;AAlE6C;AAA3BhC,Q,CACZqC,S,GAAY;AACjBJ,EAAAA,IAAI,EAAElC,SAAS,CAACuC,MAAV,CAAiBC,UADN;AAEjBL,EAAAA,OAAO,EAAEnC,SAAS,CAACuC,MAAV,CAAiBC;AAFT,C","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Download extends Component {\n  static propTypes = {\n    file: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired\n  };\n\n  downloadFile(fileName, fileContent) {\n    function fake_click(obj) {\n      let ev = document.createEvent(\"MouseEvents\");\n      ev.initMouseEvent(\n        \"click\",\n        true,\n        false,\n        window,\n        0,\n        0,\n        0,\n        0,\n        0,\n        false,\n        false,\n        false,\n        false,\n        0,\n        null\n      );\n      obj.dispatchEvent(ev);\n    }\n    function export_raw(name, data) {\n      let urlObject = window.URL || window.webkitURL || window;\n      let export_blob = new Blob([data]);\n\n      if ('msSaveBlob' in navigator) {\n        // Prefer msSaveBlob if available - Edge supports a[download] but\n        // ignores the filename provided, using the blob UUID instead.\n        // msSaveBlob will respect the provided filename\n        navigator.msSaveBlob(export_blob, name);\n      } else if ('download' in HTMLAnchorElement.prototype) {\n        let save_link = document.createElementNS(\n          \"http://www.w3.org/1999/xhtml\",\n          \"a\"\n        );\n        save_link.href = urlObject.createObjectURL(export_blob);\n        save_link.download = name;\n        fake_click(save_link);\n      } else {\n        throw new Error(\"Neither a[download] nor msSaveBlob is available\");\n      }\n    }\n    export_raw(fileName, fileContent);\n  }\n\n  render() {\n    const { children, file, content, style, className } = this.props;\n\n    return (\n      <div\n        className={\n          \"react-download-container\" + (className ? \" \" + className : \"\")\n        }\n        onClick={() => this.downloadFile(file, content)}\n        style={style}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}